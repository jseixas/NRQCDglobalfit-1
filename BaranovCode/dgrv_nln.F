*CMZ :  1.00/08 14/10/2001  16.41.42  by  Hannes Jung
*CMZ :  1.00/07 28/09/2001  14.57.02  by  Hannes Jung
*CMZ :  1.00/02 12/07/2001  21.53.13  by  Hannes Jung
*CMZ :  1.00/00 12/06/2001  12.05.04  by  Hannes Jung
*-- Author : H. Lotter
      function dgrv_nln(dx,dq)
      implicit none
      double precision dx,dq
      double precision   dgrv_nln,x,q
      double precision s1,s2,s3,s4,s5,s6,s7,s8,s9,s10
      double precision  s11,s12,s13,s14
      integer itest
      Logical First
      Data First/.true./
      data itest/1/
      if(first) then
         write(6,*) ' analytical derivative of GRV NLO used '
         first=.false.
      endif
      x = dx
      q = dq
      dgrv_nln = 0.d0
      if(q.lt.0.35) return
      if(itest.eq.0) then
         dgrv_nln = 0.d0
      else
         s2 = 0.83d0*(1-x)**(0.3404d1+0.83d0*log(0.5848488801d0*
     +   log(0.162591051d2*q)))/q
         s3 = 1/log(0.162591051d2*q)*log(1-x)*(x**(0.1724d1+0.157d0*
     +   log(0.5848488801d0*log(0.162591051d2*q)))*(0.7517d1-
     +   0.2547d1*log(0.5848488801d0*log(0.162591051d2*q))+(0.3409d2-
     +   0.5221d2*sqrt(log(0.5848488801d0*log(0.162591051d2*q)))+
     +   0.1747d2*log(0.5848488801d0*log(0.162591051d2*q)))*x+
     +   (0.4039d1+0.1491d1*log(0.5848488801d0*log(0.162591051d2*q)))
     +   *x**2)*log(1/x)**(0.8d0+0.1016d1*log(0.5848488801d0*
     +   log(0.162591051d2*q)))+log(0.5848488801d0*
     +   log(0.162591051d2*q))**0.1014d1*exp(0.1112d1-0.3438d1*
     +   log(0.5848488801d0*log(0.162591051d2*q))+0.302d0*
     +   log(0.5848488801d0*log(0.162591051d2*q))**2+sqrt((0.3256d1-
     +   0.436d0*log(0.5848488801d0*log(0.162591051d2*q)))*
     +   log(0.5848488801d0*log(0.162591051d2*q))**0.1738d1*log(1/x)
     +   )))
         s1 = s2*s3
         s3 = (1-x)**(0.3404d1+0.83d0*log(0.5848488801d0*
     +   log(0.162591051d2*q)))
         s6 = 0.157d0*x**(0.1724d1+0.157d0*log(0.5848488801d0*
     +   log(0.162591051d2*q)))/q/log(0.162591051d2*q)*log(x)*
     +   (0.7517d1-0.2547d1*log(0.5848488801d0*log(0.162591051d2*q))+
     +   (0.3409d2-0.5221d2*sqrt(log(0.5848488801d0*
     +   log(0.162591051d2*q)))+0.1747d2*log(0.5848488801d0*
     +   log(0.162591051d2*q)))*x+(0.4039d1+0.1491d1*
     +   log(0.5848488801d0*log(0.162591051d2*q)))*x**2)*log(1/x)**
     +   (0.8d0+0.1016d1*log(0.5848488801d0*log(0.162591051d2*q)))
         s7 = x**(0.1724d1+0.157d0*log(0.5848488801d0*
     +   log(0.162591051d2*q)))*(-0.2547d1/q/log(0.162591051d2*q)+(-
     +   0.26105d2/sqrt(log(0.5848488801d0*log(0.162591051d2*q)))/q/
     +   log(0.162591051d2*q)+0.1747d2/q/log(0.162591051d2*q))*x+
     +   0.1491d1/q/log(0.162591051d2*q)*x**2)*log(1/x)**(0.8d0+
     +   0.1016d1*log(0.5848488801d0*log(0.162591051d2*q)))
         s5 = s6+s7
         s6 = s5+0.1016d1*x**(0.1724d1+0.157d0*log(0.5848488801d0*
     +   log(0.162591051d2*q)))*(0.7517d1-0.2547d1*
     +   log(0.5848488801d0*log(0.162591051d2*q))+(0.3409d2-0.5221d2*
     +   sqrt(log(0.5848488801d0*log(0.162591051d2*q)))+0.1747d2*
     +   log(0.5848488801d0*log(0.162591051d2*q)))*x+(0.4039d1+
     +   0.1491d1*log(0.5848488801d0*log(0.162591051d2*q)))*x**2)*
     +   log(1/x)**(0.8d0+0.1016d1*log(0.5848488801d0*
     +   log(0.162591051d2*q)))/q/log(0.162591051d2*q)*log(log(1/x)
     +   )
         s7 = s6
         s9 = 0.1014d1*log(0.5848488801d0*log(0.162591051d2*q))**
     +   0.14d-1*exp(0.1112d1-0.3438d1*log(0.5848488801d0*
     +   log(0.162591051d2*q))+0.302d0*log(0.5848488801d0*
     +   log(0.162591051d2*q))**2+sqrt((0.3256d1-0.436d0*
     +   log(0.5848488801d0*log(0.162591051d2*q)))*
     +   log(0.5848488801d0*log(0.162591051d2*q))**0.1738d1*log(1/x)
     +   ))/q/log(0.162591051d2*q)
         s11 = log(0.5848488801d0*log(0.162591051d2*q))**0.1014d1
         s13 = -0.3438d1/q/log(0.162591051d2*q)+0.604d0*
     +   log(0.5848488801d0*log(0.162591051d2*q))/q/
     +   log(0.162591051d2*q)+1/sqrt((0.3256d1-0.436d0*
     +   log(0.5848488801d0*log(0.162591051d2*q)))*
     +   log(0.5848488801d0*log(0.162591051d2*q))**0.1738d1*log(1/x)
     +   )*(-0.436d0/q/log(0.162591051d2*q)*log(0.5848488801d0*
     +   log(0.162591051d2*q))**0.1738d1*log(1/x)+0.1738d1*(0.3256d1-
     +   0.436d0*log(0.5848488801d0*log(0.162591051d2*q)))*
     +   log(0.5848488801d0*log(0.162591051d2*q))**0.738d0*log(1/x)/
     +   q/log(0.162591051d2*q))/2
         s14 = exp(0.1112d1-0.3438d1*log(0.5848488801d0*
     +   log(0.162591051d2*q))+0.302d0*log(0.5848488801d0*
     +   log(0.162591051d2*q))**2+sqrt((0.3256d1-0.436d0*
     +   log(0.5848488801d0*log(0.162591051d2*q)))*
     +   log(0.5848488801d0*log(0.162591051d2*q))**0.1738d1*log(1/x)
     +   ))
         s12 = s13*s14
         s10 = s11*s12
         s8 = s9+s10
         s4 = s7+s8
         s2 = s3*s4
         dgrv_nln = ((s1+s2))

      endif
      return
      end
